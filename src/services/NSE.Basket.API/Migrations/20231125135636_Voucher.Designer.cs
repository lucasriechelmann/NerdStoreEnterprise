// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NSE.Basket.API.Data;

#nullable disable

namespace NSE.Basket.API.Migrations
{
    [DbContext(typeof(BasketContext))]
    [Migration("20231125135636_Voucher")]
    partial class Voucher
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NSE.Basket.API.Models.BasketCustomer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("VoucherUsed")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .HasDatabaseName("IDX_Cliente");

                    b.ToTable("BasketCustomers");
                });

            modelBuilder.Entity("NSE.Basket.API.Models.BasketItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BasketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BasketId");

                    b.ToTable("BasketItems");
                });

            modelBuilder.Entity("NSE.Basket.API.Models.BasketCustomer", b =>
                {
                    b.OwnsOne("NSE.Basket.API.Models.Voucher", "Voucher", b1 =>
                        {
                            b1.Property<Guid>("BasketCustomerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Code")
                                .HasColumnType("varchar(50)")
                                .HasColumnName("VoucherCode");

                            b1.Property<int>("DiscountType")
                                .HasColumnType("int")
                                .HasColumnName("VoucherDiscountType");

                            b1.Property<decimal?>("Percent")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("VoucherPercent");

                            b1.Property<decimal?>("Value")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("VoucherValue");

                            b1.HasKey("BasketCustomerId");

                            b1.ToTable("BasketCustomers");

                            b1.WithOwner()
                                .HasForeignKey("BasketCustomerId");
                        });

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("NSE.Basket.API.Models.BasketItem", b =>
                {
                    b.HasOne("NSE.Basket.API.Models.BasketCustomer", "BasketCustomer")
                        .WithMany("Items")
                        .HasForeignKey("BasketId")
                        .IsRequired();

                    b.Navigation("BasketCustomer");
                });

            modelBuilder.Entity("NSE.Basket.API.Models.BasketCustomer", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
